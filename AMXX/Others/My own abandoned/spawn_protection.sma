/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <hamsandwich>
#include <fun>
#include <fakemeta>

#define PLUGIN "New Plug-In"
#define VERSION "1.0"
#define AUTHOR "author"

#define taskid 14151

new g_pTime, g_pMessage

enum
{ R, G, B }

new const g_iColors[][3] = {
	{ 255, 255, 255 },
	{ 0, 255, 255 }, 
	{ 0, 0, 255 },
	{ 255, 255, 0 },
	{ 255, 0, 0 },
	{ 0, 255, 0 }
	//{ 173, 255, 47 },
	//{ 255, 192, 203 },
	//{  160, 32, 240 }
}

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	RegisterHam(Ham_Spawn, "player", "fw_Spawn", 1)
	
	g_pTime = register_cvar("sp_time", "2.5")
	g_pMessage = register_cvar("sp_message", "1")
}

public fw_Spawn(id)
{
	if(!is_user_alive(id))
		return;
	
	if(task_exists(id + taskid))
		remove_task(id + taskid)
		
	if(get_pcvar_num(g_pMessage))
	{
		client_print(id, print_center, "Spawn Protection ON!")
	}
	
	set_user_godmode(id, 1)
	new iRan = random_num(0, sizeof(g_iColors) - 1)
	set_render(id, kRenderFxGlowShell, g_iColors[iRan][R], g_iColors[iRan][G], g_iColors[iRan][B], kRenderTransAlpha, 50)
	
	set_task(get_pcvar_float(g_pTime), "Normalize", id + taskid)
}

public Normalize(id)
{
	id -= taskid
	
	if(!is_user_connected(id) || !is_user_alive(id))
	{
		return;
	}
	
	set_user_godmode(id, 0)
	set_render(id, kRenderFxGlowShell, 0, 0, 0, kRenderFxNone, 255)
}
	
stock set_render(id, fx = kRenderFxNone, r = 255, g = 255, b = 255, render = kRenderNormal, amount = 16)
{
	new Float:color[3]
	color[0] = float(r)
	color[1] = float(g)
	color[2] = float(b)
	
	set_pev(id, pev_renderfx, fx)
	set_pev(id, pev_rendercolor, color )
	set_pev(id, pev_rendermode, render)
	set_pev(id, pev_renderamt, Float:amount)
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ ansicpg1252\\ deff0\\ deflang1033{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ f0\\ fs16 \n\\ par }
*/
